// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250711151019_addData2")]
    partial class addData2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Building A",
                            Description = "Human Resources Department",
                            Email = "hr@company.com",
                            Name = "HR",
                            Phone = "111-111-1111"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Building B",
                            Description = "Information Technology Department",
                            Email = "it@company.com",
                            Name = "IT",
                            Phone = "222-222-2222"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Building C",
                            Description = "Finance Department",
                            Email = "finance@company.com",
                            Name = "Finance",
                            Phone = "333-333-3333"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "City Center",
                            DepartmentId = 1,
                            EmailAddress = "alice@company.com",
                            Name = "Alice",
                            Phone = "111-111-1001",
                            Salary = 5000m
                        },
                        new
                        {
                            Id = 2,
                            Address = "East Side",
                            DepartmentId = 1,
                            EmailAddress = "bob@company.com",
                            Name = "Bob",
                            Phone = "111-111-1002",
                            Salary = 5200m
                        },
                        new
                        {
                            Id = 3,
                            Address = "West End",
                            DepartmentId = 1,
                            EmailAddress = "charlie@company.com",
                            Name = "Charlie",
                            Phone = "111-111-1003",
                            Salary = 4800m
                        },
                        new
                        {
                            Id = 4,
                            Address = "North Town",
                            DepartmentId = 1,
                            EmailAddress = "diana@company.com",
                            Name = "Diana",
                            Phone = "111-111-1004",
                            Salary = 5100m
                        },
                        new
                        {
                            Id = 5,
                            Address = "City Center",
                            DepartmentId = 2,
                            EmailAddress = "edward@company.com",
                            Name = "Edward",
                            Phone = "222-222-2001",
                            Salary = 6000m
                        },
                        new
                        {
                            Id = 6,
                            Address = "South Side",
                            DepartmentId = 2,
                            EmailAddress = "fiona@company.com",
                            Name = "Fiona",
                            Phone = "222-222-2002",
                            Salary = 6200m
                        },
                        new
                        {
                            Id = 7,
                            Address = "East Side",
                            DepartmentId = 2,
                            EmailAddress = "george@company.com",
                            Name = "George",
                            Phone = "222-222-2003",
                            Salary = 6100m
                        },
                        new
                        {
                            Id = 8,
                            Address = "West End",
                            DepartmentId = 2,
                            EmailAddress = "hannah@company.com",
                            Name = "Hannah",
                            Phone = "222-222-2004",
                            Salary = 6300m
                        },
                        new
                        {
                            Id = 9,
                            Address = "Downtown",
                            DepartmentId = 3,
                            EmailAddress = "ian@company.com",
                            Name = "Ian",
                            Phone = "333-333-3001",
                            Salary = 5500m
                        },
                        new
                        {
                            Id = 10,
                            Address = "City Center",
                            DepartmentId = 3,
                            EmailAddress = "julia@company.com",
                            Name = "Julia",
                            Phone = "333-333-3002",
                            Salary = 5400m
                        },
                        new
                        {
                            Id = 11,
                            Address = "South Side",
                            DepartmentId = 3,
                            EmailAddress = "kevin@company.com",
                            Name = "Kevin",
                            Phone = "333-333-3003",
                            Salary = 5300m
                        },
                        new
                        {
                            Id = 12,
                            Address = "West End",
                            DepartmentId = 3,
                            EmailAddress = "laura@company.com",
                            Name = "Laura",
                            Phone = "333-333-3004",
                            Salary = 5600m
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.HasOne("WebApplication1.Models.Department", null)
                        .WithMany("Employee")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.Department", b =>
                {
                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
